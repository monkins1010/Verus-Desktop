stages:
- build
- test
- deploy
########################################################################################################################
####START####                                     PROJECT LEVEL VARIABLES                                  ####START####
########################################################################################################################
variables:
  DOCKER_DRIVER: overlay2
  DEFAULT_VERUSCOIN_BRANCH: release
  VERUS_VERSION: 0.7.3-8
  VERUSCOIN_VERSION: 0.7.3-8
  KOMODO_VERSION: 0.7.0
  PIRATE_VERSION: 5.1.1-1
  BINARY_SOURCE: VerusCoin
  VERUS_APPIMAGE_X64: Verus-Desktop-v${VERUS_VERSION}-x86_64.AppImage
  VERUS_APPIMAGE_ARM64: Verus-Desktop-v${VERUS_VERSION}-arm64.AppImage
  VERUS_WINDOWS_ZIP: Verus-Desktop-Windows-v${VERUS_VERSION}.zip
  VERUS_WINDOWS_NSIS: Verus-Desktop-v${VERUS_VERSION}.exe
  VERUS_MACOS: Verus-Desktop-v${VERUS_VERSION}.dmg
  GIT_SUBMODULE_STRATEGY: recursive
  POST_COMMENT: "Pipeline Trigger: ${CI_PIPELINE_SOURCE}\n
      Branch: ${CI_COMMIT_REF_NAME}\n
      Commit: https://github.com/VerusCoin/Verus-Desktop/commit/${CI_COMMIT_SHA}\n
      ${CI_COMMIT_MESSAGE}\n"
########################################################################################################################
####END####                                        PROJECT LEVEL VARIABLES                                   ####END####
########################################################################################################################
########################################################################################################################
########################################################################################################################
####START####                                          Build Stage                                        ####START#####
########################################################################################################################
########################################################################################################################
####START####                                            LINUX                                             ####START####
########################################################################################################################
build:linux:
  image: asherd/agama-builder
  stage: build
  before_script:
    - echo "$AUTH_KEY" > AUTH_KEY.json &&
      gcloud auth activate-service-account
      --key-file AUTH_KEY.json &&
      rm AUTH_KEY.json
    - if [ -z "${UPSTREAM_CLI_BRANCH}" ]; then export
      VERUS_CLI_LINUX="${BINARY_SOURCE}/${DEFAULT_VERUSCOIN_BRANCH}/Linux/Verus-CLI-Linux-v${VERUSCOIN_VERSION}-x86_64.tar.gz"
      POST_COMMENT="${POST_COMMENT}Using ${BINARY_SOURCE}/${DEFAULT_VERUSCOIN_BRANCH} binaries.";
      else
      export POST_COMMENT="${POST_COMMENT}Using ${UPSTREAM_TRIGGER}/${UPSTREAM_CLI_BRANCH} binaries."; fi
    - cd gui/Verus-Desktop-GUI/react
    - yarn install
    - yarn run build
    - cd ../../..
    - mkdir -p assets/bin/linux64/verusd
    - gsutil cp $STAGING/$VERUS_CLI_LINUX .
    - tar -xzvf Verus-CLI-Linux-v${VERUSCOIN_VERSION}-x86_64.tar.gz --strip=1 --directory assets/bin/linux64/verusd
    - rm Verus-CLI-Linux-v${VERUSCOIN_VERSION}-x86_64.tar.gz
    - mkdir -p assets/bin/linux64/komodod
    - mkdir -p assets/bin/linux64/pirated
    - wget https://github.com/KomodoPlatform/komodo/releases/download/${KOMODO_VERSION}/komodo_${KOMODO_VERSION}_linux.zip
    - unzip -p komodo_${KOMODO_VERSION}_linux.zip | tar -xzvf - --strip=1 --directory assets/bin/linux64/komodod
    - rm komodo_${KOMODO_VERSION}_linux.zip
    - strip --strip-unneeded  assets/bin/linux64/komodod/komodod && strip --strip-unneeded  assets/bin/linux64/komodod/komodo-cli
    - gsutil cp $STAGING/VerusCoin/Zcash/zcashd-linux-x86_64.tar.gz .
    - tar -xzvf zcashd-linux-x86_64.tar.gz --directory assets/bin/linux64/
    - rm zcashd-linux-x86_64.tar.gz
    - wget https://github.com/PirateNetwork/pirate/releases/download/v${PIRATE_VERSION}/pirate-cli-ubuntu1804-v${PIRATE_VERSION}.zip
    - unzip pirate-cli-ubuntu1804-v${PIRATE_VERSION}.zip -d assets/bin/linux64/pirated
    - rm pirate-cli-ubuntu1804-v${PIRATE_VERSION}.zip
    - sed -i "s/process.env.INFURA_PROJECT_ID/'${INFURA_PROJECT_ID}'/g" keys/infura.js
    - sed -i "s/process.env.ETHERSCAN_API_KEY/'${ETHERSCAN_KEY}'/g" keys/etherscan.js
    - yarn install
  script:
    - yarn run dist
  after_script:
    - cd dist
    - gsutil cp ${VERUS_APPIMAGE_X64} $STAGING/Verus-Desktop/$CI_COMMIT_REF_NAME/${VERUS_VERSION}/
    - curl -F file=@"$VERUS_APPIMAGE_X64"
      -F channels="$VERUS_POST_CHANNEL"
      -F initial_comment="${POST_COMMENT}"
      -H "${SLACK_BOT_AUTH}"
      "https://slack.com/api/files.upload"


build:linux:arm64:
  image: asherd/agama-builder
  stage: build
  before_script:
    - echo "$AUTH_KEY" > AUTH_KEY.json &&
      gcloud auth activate-service-account
      --key-file AUTH_KEY.json &&
      rm AUTH_KEY.json
    - if [ -z "${UPSTREAM_CLI_BRANCH}" ]; then export
      VERUS_CLI_LINUX="${BINARY_SOURCE}/${DEFAULT_VERUSCOIN_BRANCH}/Linux/Verus-CLI-Linux-v${VERUSCOIN_VERSION}-arm64.tar.gz"
      POST_COMMENT="${POST_COMMENT}Using ${BINARY_SOURCE}/${DEFAULT_VERUSCOIN_BRANCH} binaries.";
      else
      export POST_COMMENT="${POST_COMMENT}Using ${UPSTREAM_TRIGGER}/${UPSTREAM_CLI_BRANCH} binaries."; fi
    - cd gui/Verus-Desktop-GUI/react
    - yarn install
    - yarn run build
    - cd ../../..
    - mkdir -p assets/bin/linux64/verusd
    - mkdir -p assets/bin/linux64/pirated
    - gsutil cp $STAGING/$VERUS_CLI_LINUX .
    - tar -xzvf Verus-CLI-Linux-v${VERUSCOIN_VERSION}-arm64.tar.gz --strip=1 --directory assets/bin/linux64/verusd
    - rm Verus-CLI-Linux-v${VERUSCOIN_VERSION}-arm64.tar.gz
    - gsutil cp $STAGING/VerusCoin/Zcash/zcashd-linux-arm64.tar.gz .
    - tar -xzvf zcashd-linux-arm64.tar.gz --directory assets/bin/linux64/
    - rm zcashd-linux-arm64.tar.gz
    - wget https://github.com/PirateNetwork/pirate/releases/download/v${PIRATE_VERSION}/pirate-cli-aarch64-v${PIRATE_VERSION}.zip
    - unzip pirate-cli-aarch64-v${PIRATE_VERSION}.zip -d assets/bin/linux64/pirated
    - rm  pirate-cli-aarch64-v${PIRATE_VERSION}.zip
    - sed -i "s/process.env.INFURA_PROJECT_ID/'${INFURA_PROJECT_ID}'/g" keys/infura.js
    - sed -i "s/process.env.ETHERSCAN_API_KEY/'${ETHERSCAN_KEY}'/g" keys/etherscan.js
    - yarn install
  script:
    - yarn run dist --arm64
  after_script:
    - cd dist
    - gsutil cp ${VERUS_APPIMAGE_ARM64} $STAGING/Verus-Desktop/$CI_COMMIT_REF_NAME/${VERUS_VERSION}/
    - curl -F file=@"$VERUS_APPIMAGE_ARM64"
      -F channels="$VERUS_POST_CHANNEL"
      -F initial_comment="${POST_COMMENT}"
      -H "${SLACK_BOT_AUTH}"
      "https://slack.com/api/files.upload"
########################################################################################################################
####END####                                              LINUX                                               ####END####
########################################################################################################################
####START####                                           WINDOWS                                            ####START####
########################################################################################################################
build:windows:
  stage: build
  image: asherd/agama-builder:windows
  before_script:
    - echo "$AUTH_KEY" > AUTH_KEY.json &&
      gcloud auth activate-service-account
      --key-file AUTH_KEY.json &&
      rm AUTH_KEY.json
    - if [ -z "${UPSTREAM_CLI_BRANCH}" ]; then export
      VERUS_CLI_WINDOWS="${BINARY_SOURCE}/${DEFAULT_VERUSCOIN_BRANCH}/Windows/Verus-CLI-Windows-v${VERUSCOIN_VERSION}.zip"
      POST_COMMENT="${POST_COMMENT}Using ${BINARY_SOURCE}/${DEFAULT_VERUSCOIN_BRANCH} binaries.";
      else
      export POST_COMMENT="${POST_COMMENT}Using ${UPSTREAM_TRIGGER}/${UPSTREAM_CLI_BRANCH} binaries."; fi
    - cd gui/Verus-Desktop-GUI/react
    - yarn install
    - yarn run build
    - cd ../../..
    - mkdir -p assets/bin/win64/komodod
    - mkdir -p assets/bin/win64/pirated
    - wget https://github.com/KomodoPlatform/komodo/releases/download/${KOMODO_VERSION}/komodo_${KOMODO_VERSION}_windows.zip
    - unzip komodo_${KOMODO_VERSION}_windows.zip
    - unzip win64.zip
    - mv win64/komodod.exe win64/komodo-cli.exe assets/bin/win64/komodod
    - rm -rf win64 win64.zip
    - rm komodo_${KOMODO_VERSION}_windows.zip
    - gsutil cp $STAGING/$VERUS_CLI_WINDOWS .
    - unzip -qq Verus-CLI-Windows-v${VERUSCOIN_VERSION}.zip -d assets/bin/win64
    - mv assets/bin/win64/verus-cli assets/bin/win64/verusd
    - strip --strip-unneeded  assets/bin/win64/komodod/komodod.exe && strip --strip-unneeded  assets/bin/win64/komodod/komodo-cli.exe
    - rm Verus-CLI-Windows-v${VERUSCOIN_VERSION}.zip
    - gsutil cp $STAGING/VerusCoin/Zcash/zcashd-win.tar.gz .
    - tar -xzvf zcashd-win.tar.gz --directory assets/bin/win64/
    - rm zcashd-win.tar.gz
    - wget https://github.com/PirateNetwork/pirate/releases/download/v${PIRATE_VERSION}/pirate-cli-windows-v${PIRATE_VERSION}.zip
    - unzip pirate-cli-windows-v${PIRATE_VERSION}.zip -d assets/bin/win64/pirated
    - rm  pirate-cli-windows-v${PIRATE_VERSION}.zip
    - sed -i "s/process.env.INFURA_PROJECT_ID/'${INFURA_PROJECT_ID}'/g" keys/infura.js
    - sed -i "s/process.env.ETHERSCAN_API_KEY/'${ETHERSCAN_KEY}'/g" keys/etherscan.js
    - yarn install
  script:
    - yarn run dist-win
  after_script:
    - cd dist
    - gsutil cp ${VERUS_WINDOWS_NSIS} $STAGING/Verus-Desktop/$CI_COMMIT_REF_NAME/${VERUS_VERSION}/
    - curl -F file=@"$VERUS_WINDOWS_NSIS"
      -F channels="$VERUS_POST_CHANNEL"
      -F initial_comment="${POST_COMMENT}"
      -H "${SLACK_BOT_AUTH}"
      "https://slack.com/api/files.upload"

########################################################################################################################
####END####                                             WINDOWS                                              ####END####
########################################################################################################################
####START####                                            MACOS                                             ####START####
########################################################################################################################
build:mac:
  stage: build
  tags: ["Mojave"]
  before_script:
    - echo "$AUTH_KEY" > AUTH_KEY.json &&
      gcloud auth activate-service-account
      --key-file AUTH_KEY.json &&
      rm AUTH_KEY.json
    - if [ -z "${UPSTREAM_CLI_BRANCH}" ]; then export
      VERUS_CLI_MACOS="${BINARY_SOURCE}/${DEFAULT_VERUSCOIN_BRANCH}/MacOS/Verus-CLI-MacOS-v${VERUSCOIN_VERSION}.tar.gz";
      POST_COMMENT="${POST_COMMENT}Using ${BINARY_SOURCE}/${DEFAULT_VERUSCOIN_BRANCH} binaries.";
      else
      export POST_COMMENT="${POST_COMMENT}Using ${UPSTREAM_TRIGGER}/${UPSTREAM_CLI_BRANCH} binaries."; fi
    - cd gui/Verus-Desktop-GUI/react
    - yarn install
    - yarn run build
    - cd ../../..
    - gsutil cp $STAGING/$VERUS_CLI_MACOS .
    - wget https://github.com/KomodoPlatform/komodo/releases/download/${KOMODO_VERSION}/komodo_${KOMODO_VERSION}_macos.zip
    - mkdir -p assets/bin/osx/verusd
    - mkdir -p assets/bin/osx/komodod
    - mkdir -p assets/bin/osx/pirated
    - tar -xzf Verus-CLI-MacOS-v${VERUSCOIN_VERSION}.tar.gz --strip=1 --directory assets/bin/osx/verusd
    - unzip -p komodo_${KOMODO_VERSION}_macos.zip | tar -xzvf - --strip=1 --directory assets/bin/osx/komodod
    - rm komodo_${KOMODO_VERSION}_macos.zip
    - rm Verus-CLI-MacOS-v${VERUSCOIN_VERSION}.tar.gz
    - gsutil cp $STAGING/VerusCoin/Zcash/zcashd-macos.tar.gz .
    - tar -xzvf zcashd-macos.tar.gz --directory assets/bin/osx/
    - rm zcashd-macos.tar.gz
    - wget https://github.com/PirateNetwork/pirate/releases/download/v${PIRATE_VERSION}/pirate-cli-MacOS-v${PIRATE_VERSION}.zip
    - unzip pirate-cli-MacOS-v${PIRATE_VERSION}.zip -d assets/bin/osx/pirated
    - rm pirate-cli-MacOS-v${PIRATE_VERSION}.zip
    - sed -i -e "s/process.env.INFURA_PROJECT_ID/'${INFURA_PROJECT_ID}'/g" keys/infura.js
    - sed -i -e "s/process.env.ETHERSCAN_API_KEY/'${ETHERSCAN_KEY}'/g" keys/etherscan.js
    - yarn install
  script:
    - export USE_HARD_LINKS=false
    - yarn run dist
  after_script:
    - cd dist
    - gsutil cp ${VERUS_MACOS} $STAGING/Verus-Desktop/$CI_COMMIT_REF_NAME/${VERUS_VERSION}/
    - curl -F file=@"${VERUS_MACOS}"
      -F channels="${VERUS_POST_CHANNEL}"
      -F initial_comment="${POST_COMMENT}"
      -H "${SLACK_BOT_AUTH}"
      "https://slack.com/api/files.upload"
